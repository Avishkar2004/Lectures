Authentication Pattern :-

2 types of Authentication 

1. State full :-
which maintains state or date or server side

2. Stateless :-
which has no state



how to Transfer uid ?
- cookie, response, header

express flow :-
client => middleware(check for cookie value of uid, if valid calls next() else reject the request) => endpoint route


stateful disadvantage :-

-if I restart the server then my all user log out
-this is memory intensive
-we have to use low memory





- Difference between Stateless and Stateful Protocol
- Network Protocols for web browser and servers are categorized into two types: Stateless Protocol, and Stateful protocol. 
- These two protocols are differentiated on the basis of the requirement of server or server-side software to save status or session information. 

1. Stateless Protocol: 
Stateless Protocols are the type of network protocols in which Client send request to the server and server response back according to current state. It does not require the server to retain session information or a status about each communicating partner for multiple request. 
- HTTP (Hypertext Transfer Protocol), UDP (User Datagram Protocol), DNS (Domain Name System) are the example of Stateless Protocol. 

* Salient features of Stateless Protocols: 

Stateless Protocol simplify the design of Server.
The stateless protocol requires less resources because system do not need to keep track of the multiple link communications and the session details.
In Stateless Protocol each information packet travel on itâ€™s own without reference to any other packet.
Each communication in Stateless Protocol is discrete and unrelated to those that precedes or follow.

2. Stateful Protocol: 
In Stateful Protocol If client send a request to the server then it expects some kind of response, if it does not get any response then it resend the request. FTP (File Transfer Protocol), TCP, and Telnet are the example of Stateful Protocol. 

Salient features of Stateful Protocol: 

- Stateful Protocols provide better performance to the client by keeping track of the connection information.
- Stateful Application require Backing storage.
- Stateful request are always dependent on the server-side state.
- TCP session follow stateful protocol because both systems maintain information about the session itself during its life.

Comparisons between Stateless and Stateful Protocol: 

Stateless Protocol	:-
- Stateless Protocol does not require the server to retain the server information or session details.
- In Stateless Protocol, there is no tight dependency between server and client.	
- The Stateless protocol design simplify the server design.	
- Stateless Protocols works better at the time of crash because there is no state that must be restored, a failed server can simply restart after a crash.	
- Stateless Protocols handle the transaction very fastly.
- Stateless Protocols are easy to implement in Internet.	
- Scaling architecture is relatively easier.	
- The requests are not dependent on the server side and are self contained.	
- To process different information at a time , different servers can be used.	
- Example of Stateless are UDP , DNS , HTTP , etc.

Stateful Protocol :-
- Stateful Protocol require server to save the status and session information.
- In Stateful protocol, there is tight dependency between server and client
- The Stateful protocol design makes the design of server very complex and heavy.
- Stateful Protocol does not work better at the time of crash because stateful server have to keep the information of the status and session details of the internal states.
- Stateful Protocols handle the transaction very slowly.
- Stateful protocols are logically heavy to implement in Internet.
- It is difficult and complex to scale architecture.
- The requests are always dependent on the server side.
- To process every request , the same server must be utilized.
- Example of Stateful are FTP , Telnet , etc.