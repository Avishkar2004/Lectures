(ASG = Autoscaling group)
-if Autoscaling finds that the number of EC2 instances Launched by ASG  into subject AZs is not balanced (EC2 enstances are not evenly distributed) Autoscaling do rebalancing activity by itself
- as always tries to balance the instances distribution across AZ's
- while rebalancing ASG Launches new EC2 instances , where there are less EC2 at present, and then terminates the instances from the Az that had more instances

Q. what causes imbalance of EC2 ?
- if we add or remove some subnet/AZ from Autoscaling group
-if we manually request of EC2 termination from our ASG(Autoscaling group)
- an Az that did not have Enough EC2 capacity new has enough capacity and it is only of one Autoscaling group AZ 
- we can attack a running EC2 instance to an Autoscaling group by using aws console or CLI, if the below conditions are :-

- instance must be in running state (not terminated or stopped)
- AMI used to launch the EC2 shell Exist
- * instance is not part of another Autoscaling group.
- * instance is in the same size AZ of the name group.

- If the existing EC2 instance under the Autoscaling group, plus the one to be needed, exceed the max capacity of the Autoscaling group, the request will fail, EC2 instance would not be added.

- u can manually remove ec2 instance from an Autoscaling group using AWS console or CLI
- u can then manage the detached instance independly or attch it to another Autoscaling group
- when u detach an instance, u have the option to decrement the Autoscaling group desire capacity
- if you do not, the Autoscaling group will launch another instance to replace the one detached
- when u delete an Autoscaling group, its parameter like maximum,minimum and desired capacity are all set to zero hence, it terminates all its EC2 instance
- if you want to keep the EC2 instance and manage there independtly, u can manually detache them first, then delete the ASG
- we can attach one or more elastic load balancer to our Autoscaling group
- the elastic load balancer must be in the same region as the Autoscaling group
- once u do this , only EC2 instance existing or added by the Autoscaling group will be Automatically registered with the autoscalling group defined ELB
- u do not need to register those instance manually on the autoscalling group defined ELB
-instances and the ELB must be in the same VPC
- autoscalling classfies its EC2 instances health status as either healthy or unhealthy
- by default as uses EC2 status checks only to determine the health status of an instance
- when u have one or more ELB defined with the autoscalling group, u can configure autoscalling to use "both" the EC2 health check and the ELB health check to determine the instances health check
- health check grace period is 300 sec by default
- if we set "Zero" in grace period, the instance health is checked against once it is in service
- until the grace period timer expires any unhealthy status reported by EC2 status checkes, or the ELB attached to the ASG attached to the autoscalling group, will not be acted upon 

-after grace period expires, autoscalling group would consider an instance unhealthy in any of the following cases
- EC2 status check report to autoscalling group an instance status other than running
- if ELB health check are configured to be used by the autoscalling, then if the ELB report the instance as "Out of Service"
- unlike Az rebalancing, termination of unhealthy instances happens first, then autoscalling attempt to launch new instance to replace the ones terminated
- elastic ip and EBS volume gets detached from termination instances you need to manually attach there to the new instances.